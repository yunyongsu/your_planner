{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import Chat from'./Chat';import'bootstrap/dist/css/bootstrap.min.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Weather=()=>{const[weatherData,setWeatherData]=useState([]);useEffect(()=>{const cities=['Seoul','Busan','Incheon'];const fetchWeatherData=async()=>{try{const responses=await Promise.all(cities.map(city=>axios.get('/api/weather',{params:{city}})));const data=responses.map(response=>response.data);setWeatherData(data);}catch(error){console.error('Error fetching weather data:',error);}};fetchWeatherData();},[]);return/*#__PURE__*/_jsx(\"footer\",{className:\"container footer-flow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:weatherData.map((data,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"http://openweathermap.org/img/wn/\".concat(data.weather[0].icon,\"@2x.png\"),alt:data.weather[0].description,height:\"100\",width:\"100\"}),/*#__PURE__*/_jsxs(\"h5\",{className:\"card-title\",children:[\"Weather in \",data.name]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Temperature: \",data.main.temp,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Weather: \",data.weather[0].description]})]})})},index))})});};export default Weather;","map":{"version":3,"names":["React","useState","useEffect","axios","Chat","jsx","_jsx","jsxs","_jsxs","Weather","weatherData","setWeatherData","cities","fetchWeatherData","responses","Promise","all","map","city","get","params","data","response","error","console","className","children","index","src","concat","weather","icon","alt","description","height","width","name","main","temp"],"sources":["D:/_dev/intellij/YourPlanner-master/src/main/frontend/src/components/js/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chat from './Chat';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nconst Weather = () => {\n    const [weatherData, setWeatherData] = useState([]);\n\n    useEffect(() => {\n        const cities = ['Seoul', 'Busan', 'Incheon'];\n\n        const fetchWeatherData = async () => {\n            try {\n                const responses = await Promise.all(\n                    cities.map(city =>\n                        axios.get('/api/weather', {\n                            params: { city }\n                        })\n                    )\n                );\n                const data = responses.map(response => response.data);\n                setWeatherData(data);\n            } catch (error) {\n                console.error('Error fetching weather data:', error);\n            }\n        };\n\n        fetchWeatherData();\n    }, []);\n\n    return (\n        <footer className=\"container footer-flow\">\n            <div className=\"row\">\n                {weatherData.map((data, index) => (\n                    <div className=\"col\" key={index}>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <img\n                                    src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n                                    alt={data.weather[0].description}\n                                    height=\"100\"\n                                    width=\"100\"\n                                />\n                                <h5 className=\"card-title\">Weather in {data.name}</h5>\n                                <p className=\"card-text\">Temperature: {data.main.temp}Â°C</p>\n                                <p className=\"card-text\">Weather: {data.weather[0].description}</p>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n                \n            </div>\n            \n        </footer>\n    );\n};\n\nexport default Weather;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,sCAAsC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAM9C,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAElDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAU,MAAM,CAAG,CAAC,OAAO,CAAE,OAAO,CAAE,SAAS,CAAC,CAE5C,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACA,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAC/BJ,MAAM,CAACK,GAAG,CAACC,IAAI,EACXf,KAAK,CAACgB,GAAG,CAAC,cAAc,CAAE,CACtBC,MAAM,CAAE,CAAEF,IAAK,CACnB,CAAC,CACL,CACJ,CAAC,CACD,KAAM,CAAAG,IAAI,CAAGP,SAAS,CAACG,GAAG,CAACK,QAAQ,EAAIA,QAAQ,CAACD,IAAI,CAAC,CACrDV,cAAc,CAACU,IAAI,CAAC,CACxB,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACxD,CACJ,CAAC,CAEDV,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIP,IAAA,WAAQmB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cACrCpB,IAAA,QAAKmB,SAAS,CAAC,KAAK,CAAAC,QAAA,CACfhB,WAAW,CAACO,GAAG,CAAC,CAACI,IAAI,CAAEM,KAAK,gBACzBrB,IAAA,QAAKmB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBpB,IAAA,QAAKmB,SAAS,CAAC,MAAM,CAAAC,QAAA,cACjBlB,KAAA,QAAKiB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBpB,IAAA,QACIsB,GAAG,qCAAAC,MAAA,CAAsCR,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,WAAU,CACvEC,GAAG,CAAEX,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG,WAAY,CACjCC,MAAM,CAAC,KAAK,CACZC,KAAK,CAAC,KAAK,CACd,CAAC,cACF3B,KAAA,OAAIiB,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,aAAW,CAACL,IAAI,CAACe,IAAI,EAAK,CAAC,cACtD5B,KAAA,MAAGiB,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,eAAa,CAACL,IAAI,CAACgB,IAAI,CAACC,IAAI,CAAC,OAAE,EAAG,CAAC,cAC5D9B,KAAA,MAAGiB,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,WAAS,CAACL,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,EAAI,CAAC,EAClE,CAAC,CACL,CAAC,EAbgBN,KAcrB,CACR,CAAC,CAED,CAAC,CAEF,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAlB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}