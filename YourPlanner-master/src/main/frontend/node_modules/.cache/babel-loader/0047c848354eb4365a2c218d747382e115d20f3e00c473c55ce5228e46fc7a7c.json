{"ast":null,"code":"import React,{useState,useEffect}from'react';import ListContainer from'./ListContainer';import'../css/Button.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DummyLocationBasedList=_ref=>{let{destination2,departure,destination,startDate,endDate,selectedTrains,setSelectedTrains}=_ref;const[locations,setLocations]=useState([]);const[selectedLocation,setSelectedLocation]=useState(destination2);const[selectedSigungu,setSelectedSigungu]=useState('');const[view,setView]=useState('attractions');// 'attractions' or 'hotels' or 'restaurant'\nconst[sigungus,setSigungus]=useState([]);// 시/군/구 목록 추가\nconst OPEN_KEY=\"5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D\";const parseXmlToJson=xmlString=>{const parser=new DOMParser();const xmlDoc=parser.parseFromString(xmlString,'text/xml');const items=Array.from(xmlDoc.getElementsByTagName('item'));return items.map(item=>{const obj={};Array.from(item.children).forEach(child=>{obj[child.tagName]=child.textContent;});return obj;});};useEffect(()=>{const fetchData=async()=>{try{const response=await fetch(\"https://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=\".concat(OPEN_KEY,\"&numOfRows=17&pageNo=1&MobileOS=ETC&MobileApp=AppTest&_type=json\"));if(!response.ok){throw new Error('Network response was not ok');}const json=await response.json();setLocations(json.response.body.items.item);}catch(error){console.error('Fetch error:',error);}};fetchData();},[]);useEffect(()=>{setSelectedLocation(destination2);},[destination2]);useEffect(()=>{const fetchSigungus=async()=>{if(!selectedLocation)return;try{const response=await fetch(\"http://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=\".concat(OPEN_KEY,\"&numOfRows=32&pageNo=1&MobileOS=ETC&MobileApp=AppTest&areaCode=\").concat(selectedLocation));if(!response.ok){throw new Error('Network response was not ok');}const xmlData=await response.text();const json=parseXmlToJson(xmlData);setSelectedSigungu('');setSigungus(json);// 시/군/구 목록 업데이트\n}catch(error){console.error('Fetch error:',error);}};fetchSigungus();},[selectedLocation]);const handleChange=event=>{setSelectedLocation(event.target.value);};const handleViewChange=view=>{setView(view);};const handleSigunguChange=event=>{setSelectedSigungu(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location-selection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view-selection\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('attractions'),className:view==='attractions'?'selected':'',children:\"\\uBA85\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('hotels'),className:view==='hotels'?'selected':'',children:\"\\uC219\\uBC15\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('restaurant'),className:view==='restaurant'?'selected':'',children:\"\\uB9DB\\uC9D1\"})]}),selectedLocation&&/*#__PURE__*/_jsxs(\"div\",{className:\"address-selection\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'170px'}}),/*#__PURE__*/_jsxs(\"select\",{value:selectedSigungu,onChange:handleSigunguChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC2DC/\\uAD70/\\uAD6C\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),sigungus.map((sigungu,index)=>/*#__PURE__*/_jsx(\"option\",{value:sigungu.code,children:sigungu.name},index))]})]})]}),selectedLocation&&/*#__PURE__*/_jsx(ListContainer,{areaCode:selectedLocation,sigunguCode:selectedSigungu,view:view,departure:departure,destination:destination,startDate:startDate,endDate:endDate,selectedTrains:selectedTrains,setSelectedTrains:setSelectedTrains})]});};function PrintConsole(){console.log(\"test\");}export default DummyLocationBasedList;","map":{"version":3,"names":["React","useState","useEffect","ListContainer","jsx","_jsx","jsxs","_jsxs","DummyLocationBasedList","_ref","destination2","departure","destination","startDate","endDate","selectedTrains","setSelectedTrains","locations","setLocations","selectedLocation","setSelectedLocation","selectedSigungu","setSelectedSigungu","view","setView","sigungus","setSigungus","OPEN_KEY","parseXmlToJson","xmlString","parser","DOMParser","xmlDoc","parseFromString","items","Array","from","getElementsByTagName","map","item","obj","children","forEach","child","tagName","textContent","fetchData","response","fetch","concat","ok","Error","json","body","error","console","fetchSigungus","xmlData","text","handleChange","event","target","value","handleViewChange","handleSigunguChange","className","onClick","style","marginLeft","onChange","sigungu","index","code","name","areaCode","sigunguCode","PrintConsole","log"],"sources":["D:/_dev/intellij/YourPlanner-master/src/main/frontend/src/components/js/DummyLocationBasedList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ListContainer from './ListContainer';\nimport '../css/Button.css';\n\nconst DummyLocationBasedList = ({ destination2,departure, destination, startDate, endDate, selectedTrains, setSelectedTrains }) => {\n    const [locations, setLocations] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState(destination2);\n    const [selectedSigungu, setSelectedSigungu] = useState('');\n    const [view, setView] = useState('attractions'); // 'attractions' or 'hotels' or 'restaurant'\n    const [sigungus, setSigungus] = useState([]); // 시/군/구 목록 추가\n    const OPEN_KEY = \"5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D\";\n\n    const parseXmlToJson = (xmlString) => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\n        const items = Array.from(xmlDoc.getElementsByTagName('item'));\n        return items.map(item => {\n            const obj = {};\n            Array.from(item.children).forEach(child => {\n                obj[child.tagName] = child.textContent;\n            });\n            return obj;\n        });\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(\n                    `https://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=${OPEN_KEY}&numOfRows=17&pageNo=1&MobileOS=ETC&MobileApp=AppTest&_type=json`\n                );\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const json = await response.json();\n                setLocations(json.response.body.items.item);\n            } catch (error) {\n                console.error('Fetch error:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        setSelectedLocation(destination2);\n    }, [destination2]);\n\n    useEffect(() => {\n        const fetchSigungus = async () => {\n            if (!selectedLocation) return;\n\n            try {\n                const response = await fetch(\n                    `http://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=${OPEN_KEY}&numOfRows=32&pageNo=1&MobileOS=ETC&MobileApp=AppTest&areaCode=${selectedLocation}`\n                );\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const xmlData = await response.text();\n                const json = parseXmlToJson(xmlData);\n                setSelectedSigungu('');\n                setSigungus(json); // 시/군/구 목록 업데이트\n            } catch (error) {\n                console.error('Fetch error:', error);\n            }\n        };\n\n        fetchSigungus();\n    }, [selectedLocation]);\n\n    const handleChange = (event) => {\n        setSelectedLocation(event.target.value);\n    };\n\n    const handleViewChange = (view) => {\n        setView(view);\n    };\n\n    const handleSigunguChange = (event) => {\n        setSelectedSigungu(event.target.value);\n    };\n\n    return (\n        <div>\n          <div className=\"location-selection\">\n\n          <div className=\"view-selection\">\n              <button\n                onClick={() => handleViewChange('attractions')}\n                className={view === 'attractions' ? 'selected' : ''}\n              >\n                명소\n              </button>\n              <button\n                onClick={() => handleViewChange('hotels')}\n                className={view === 'hotels' ? 'selected' : ''}\n              >\n                숙박\n              </button>\n              <button\n                onClick={() => handleViewChange('restaurant')}\n                className={view === 'restaurant' ? 'selected' : ''}\n              >\n                맛집\n              </button>\n            </div>\n            {selectedLocation && (\n              <div className=\"address-selection\" >\n                <span style={{ marginLeft: '170px' }}></span>\n                <select value={selectedSigungu} onChange={handleSigunguChange}>\n                  <option value=\"\">시/군/구를 선택하세요</option>\n                  {sigungus.map((sigungu, index) => (\n                    <option key={index} value={sigungu.code}>\n                      {sigungu.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n\n          </div>\n      \n          {selectedLocation && (\n                <ListContainer\n                areaCode={selectedLocation}\n                sigunguCode={selectedSigungu}\n                view={view}\n                departure={departure}\n                destination={destination}\n                startDate={startDate}\n                endDate={endDate}\n                selectedTrains={selectedTrains}\n                setSelectedTrains={setSelectedTrains}\n\n            />\n          )}\n        </div>\n      );      \n};\n\nfunction PrintConsole(){\n    console.log(\"test\");\n}\n\nexport default DummyLocationBasedList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}