{"ast":null,"code":"var _jsxFileName = \"D:\\\\_dev\\\\intellij\\\\YourPlanner-master\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/modal.css';\nimport chatIcon from '../img/chat.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [exampleQuestions, setExampleQuestions] = useState(['오늘 날씨가 어떤가요?', '오늘 일정은 어떻게 되나요?', '오늘 뭐 먹을까요?']);\n  const fetchReply = async message => {\n    try {\n      const {\n        data\n      } = await axios.post('/chat', {\n        message\n      });\n      return data.response;\n    } catch (error) {\n      console.error('Error fetching reply:', error);\n      return 'Failed to get response from server';\n    }\n  };\n  const handleSend = async () => {\n    const reply = await fetchReply(input);\n    setMessages(prevMessages => [...prevMessages, {\n      text: input,\n      sender: 'user'\n    }, {\n      text: reply,\n      sender: 'bot'\n    }]);\n    setInput('');\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    if (isModalOpen) {\n      setMessages([{\n        text: '무엇을 도와드릴까요?',\n        sender: 'bot'\n      }]);\n    }\n  }, [isModalOpen]);\n  const handleExampleQuestionClick = async question => {\n    setInput(question);\n    closeModal();\n    const reply = await fetchReply(question);\n    setMessages(prevMessages => [...prevMessages, {\n      text: question,\n      sender: 'user'\n    }, {\n      text: reply,\n      sender: 'bot'\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"chatIcon\",\n      src: chatIcon,\n      alt: \"Chat Icon\",\n      onClick: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-label\",\n      children: \"AI \\uBE44\\uC11C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: input,\n              onChange: handleInputChange,\n              onKeyPress: handleKeyPress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"button\",\n              onClick: handleSend,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC544\\uB798 \\uCD94\\uCC9C \\uC9C8\\uBB38 \\uC911 \\uD558\\uB098\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), exampleQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            onClick: () => handleExampleQuestionClick(question),\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"OGldztqQHgIsf8tNZA+towmTWlQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","chatIcon","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","isModalOpen","setIsModalOpen","exampleQuestions","setExampleQuestions","fetchReply","message","data","post","response","error","console","handleSend","reply","prevMessages","text","sender","handleInputChange","e","target","value","handleKeyPress","key","openModal","closeModal","handleExampleQuestionClick","question","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["D:/_dev/intellij/YourPlanner-master/src/main/frontend/src/components/js/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/modal.css';\nimport chatIcon from '../img/chat.png';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [exampleQuestions, setExampleQuestions] = useState([\n    '오늘 날씨가 어떤가요?',\n    '오늘 일정은 어떻게 되나요?',\n    '오늘 뭐 먹을까요?'\n  ]);\n\n  const fetchReply = async (message) => {\n    try {\n      const { data } = await axios.post('/chat', { message });\n      return data.response;\n    } catch (error) {\n      console.error('Error fetching reply:', error);\n      return 'Failed to get response from server';\n    }\n  };\n\n  const handleSend = async () => {\n    const reply = await fetchReply(input);\n    setMessages(prevMessages => [...prevMessages, { text: input, sender: 'user' }, { text: reply, sender: 'bot' }]);\n    setInput('');\n  };\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  useEffect(() => {\n    if (isModalOpen) {\n      setMessages([{ text: '무엇을 도와드릴까요?', sender: 'bot' }]);\n    }\n  }, [isModalOpen]);\n\n  const handleExampleQuestionClick = async (question) => {\n    setInput(question);\n    closeModal();\n    const reply = await fetchReply(question);\n    setMessages(prevMessages => [...prevMessages, { text: question, sender: 'user' }, { text: reply, sender: 'bot' }]);\n  };\n\n  return (\n    <div className=\"chat\">\n      <img className=\"chatIcon\" src={chatIcon} alt=\"Chat Icon\" onClick={openModal} />\n      <div className=\"icon-label\">AI 비서</div>\n      {/* 모달 */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <div className=\"close\" onClick={closeModal}>&times;</div>\n\n            {/* 대화 표시 */}\n            <div className=\"chat-box\">\n              {messages.map((message, index) => (\n                <div key={index} className={`message ${message.sender}`}>\n                  <p className=\"message-text\">{message.text}</p>\n                </div>\n              ))}\n            </div>\n\n            {/* 입력 필드 */}\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" value={input} onChange={handleInputChange} onKeyPress={handleKeyPress} />\n              </div>\n              <div className=\"col-auto\">\n                <button className=\"btn btn-primary\" type=\"button\" onClick={handleSend}>Send</button>\n              </div>\n            </div>\n\n            {/* 추천 질문 */}\n            <div className=\"example-questions\">\n              <p>아래 추천 질문 중 하나를 선택하세요:</p>\n              {exampleQuestions.map((question, index) => (\n                <button key={index} className=\"btn btn-outline-secondary\" onClick={() => handleExampleQuestionClick(question)}>{question}</button>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}