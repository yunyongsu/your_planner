{"ast":null,"code":"import React,{useState,useEffect}from'react';import DummyListRestaurant from\"./DummyListRestaurant\";import ListComponent from\"./ListComponent\";import DummyListHotel from\"./DummyListHotel\";import RecommendedPlaces from\"./RecommendedPlaces\";import LoadMoreButton from'./LoadMoreButton';import SaveTourInfo from\"./SaveTourInfo\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ListContainer=_ref=>{let{areaCode,sigunguCode,view,departure,destination,startDate,endDate,selectedTrains,setSelectedTrains}=_ref;const[data,setData]=useState([]);const[page,setPage]=useState(1);const[loading,setLoading]=useState(false);const[selectedItems,setSelectedItems]=useState({attractions:[],hotels:[],restaurants:[]});const fetchData=async(pageNumber,type)=>{try{setLoading(true);let url;switch(type){case'attractions':url=\"http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=\".concat(pageNumber,\"&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=\").concat(areaCode,\"&sigunguCode=\").concat(sigunguCode,\"&contentTypeId=12\");break;case'hotels':url=\"http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=\".concat(pageNumber,\"&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=B&areaCode=\").concat(areaCode,\"&sigunguCode=\").concat(sigunguCode,\"&contentTypeId=32\");break;case'restaurant':url=\"http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5V%2BytDDcz11Mfxc3tREUmoX6wOvDmA3oIaBkQfhB%2Bo%2B4vBWem3h6eQhKVvJuiJvpVonGtnuRqU6A83YSSBAh8A%3D%3D&pageNo=\".concat(pageNumber,\"&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=\").concat(areaCode,\"&sigunguCode=\").concat(sigunguCode,\"&contentTypeId=39\");break;default:return;}const response=await fetch(url);if(!response.ok){throw new Error('Network response was not ok');}const responseData=await response.text();const parser=new DOMParser();const xmlData=parser.parseFromString(responseData,'text/xml');const items=xmlData.getElementsByTagName('item');const extractedData=Array.from(items).map(item=>{var _item$getElementsByTa;return{contentid:item.getElementsByTagName('contentid')[0].textContent,title:item.getElementsByTagName('title')[0].textContent,addr1:item.getElementsByTagName('addr1')[0].textContent,contenttypeid:item.getElementsByTagName('contenttypeid')[0].textContent,firstimage2:((_item$getElementsByTa=item.getElementsByTagName('firstimage2')[0])===null||_item$getElementsByTa===void 0?void 0:_item$getElementsByTa.textContent)||''};});setData(prevData=>{const newData=[...prevData,...extractedData];const uniqueData=Array.from(new Set(newData.map(item=>item.contentid))).map(id=>newData.find(item=>item.contentid===id));return uniqueData;});}catch(error){console.error('Error fetching data:',error);}finally{setLoading(false);}};useEffect(()=>{setData([]);// View가 변경될 때마다 데이터를 초기화합니다.\nsetPage(1);fetchData(1,view);// 초기 데이터를 가져옵니다.\n},[view,areaCode,sigunguCode]);useEffect(()=>{if(page>1){fetchData(page,view);// 페이지가 변경될 때만 더 많은 데이터를 가져옵니다.\n}},[page]);const loadMore=()=>{setPage(prevPage=>prevPage+1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RecommendedPlaces,{data:data,loadMore:loadMore,loading:loading,view:view,selectedItems:selectedItems,setSelectedItems:setSelectedItems,selectedTrains:selectedTrains,setSelectedTrains:setSelectedTrains,startDate:startDate,endDate:endDate,departure:departure,destination:destination}),/*#__PURE__*/_jsx(SaveTourInfo,{selectedItems:selectedItems,selectedTrains:selectedTrains,startDate:startDate,endDate:endDate,departure:departure,destination:destination})]});};export default ListContainer;","map":{"version":3,"names":["React","useState","useEffect","DummyListRestaurant","ListComponent","DummyListHotel","RecommendedPlaces","LoadMoreButton","SaveTourInfo","jsx","_jsx","jsxs","_jsxs","ListContainer","_ref","areaCode","sigunguCode","view","departure","destination","startDate","endDate","selectedTrains","setSelectedTrains","data","setData","page","setPage","loading","setLoading","selectedItems","setSelectedItems","attractions","hotels","restaurants","fetchData","pageNumber","type","url","concat","response","fetch","ok","Error","responseData","text","parser","DOMParser","xmlData","parseFromString","items","getElementsByTagName","extractedData","Array","from","map","item","_item$getElementsByTa","contentid","textContent","title","addr1","contenttypeid","firstimage2","prevData","newData","uniqueData","Set","id","find","error","console","loadMore","prevPage","children"],"sources":["D:/_dev/intellij/YourPlanner-master/src/main/frontend/src/components/js/ListContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DummyListRestaurant from \"./DummyListRestaurant\";\nimport ListComponent from \"./ListComponent\";\nimport DummyListHotel from \"./DummyListHotel\";\nimport RecommendedPlaces from \"./RecommendedPlaces\";\nimport LoadMoreButton from './LoadMoreButton';\nimport SaveTourInfo from \"./SaveTourInfo\";\n\n\nconst ListContainer = ({ areaCode, sigunguCode, view, departure, destination, startDate, endDate, selectedTrains, setSelectedTrains}) => {\n\n    const [data, setData] = useState([]);\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [selectedItems, setSelectedItems] = useState({\n        attractions: [],\n        hotels: [],\n        restaurants: []\n    });\n\n    const fetchData = async (pageNumber, type) => {\n        try {\n            setLoading(true);\n            let url;\n            switch (type) {\n                case 'attractions':\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=12`;\n                    break;\n                case 'hotels':\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=B&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=32`;\n                    break;\n                case 'restaurant':\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5V%2BytDDcz11Mfxc3tREUmoX6wOvDmA3oIaBkQfhB%2Bo%2B4vBWem3h6eQhKVvJuiJvpVonGtnuRqU6A83YSSBAh8A%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=39`;\n                    break;\n                default:\n                    return;\n            }\n\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const responseData = await response.text();\n            const parser = new DOMParser();\n            const xmlData = parser.parseFromString(responseData, 'text/xml');\n            const items = xmlData.getElementsByTagName('item');\n            const extractedData = Array.from(items).map(item => ({\n                contentid: item.getElementsByTagName('contentid')[0].textContent,\n                title: item.getElementsByTagName('title')[0].textContent,\n                addr1: item.getElementsByTagName('addr1')[0].textContent,\n                contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\n                firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\n\n                \n            }));\n            \n\n            setData(prevData => {\n                const newData = [...prevData, ...extractedData];\n                const uniqueData = Array.from(new Set(newData.map(item => item.contentid)))\n                    .map(id => newData.find(item => item.contentid === id));\n                return uniqueData;\n            });\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        setData([]); // View가 변경될 때마다 데이터를 초기화합니다.\n        setPage(1);\n        fetchData(1, view); // 초기 데이터를 가져옵니다.\n    }, [view, areaCode, sigunguCode]);\n\n    useEffect(() => {\n        if (page > 1) {\n            fetchData(page, view); // 페이지가 변경될 때만 더 많은 데이터를 가져옵니다.\n        }\n    }, [page]);\n\n    const loadMore = () => {\n        setPage(prevPage => prevPage + 1);\n    };\n\n    return (\n        <div>\n            <RecommendedPlaces\n                data={data}\n                loadMore={loadMore}\n                loading={loading}\n                view={view}\n                selectedItems={selectedItems}\n\n                setSelectedItems={setSelectedItems} \n                selectedTrains={selectedTrains}\n                setSelectedTrains={setSelectedTrains}\n                startDate={startDate}\n                endDate={endDate}\n                departure={departure}\n                destination={destination}\n            />\n\n            {/* 플랜 저장 버튼을 누를 시 값들을 전달함 */}\n            <SaveTourInfo\n                selectedItems={selectedItems}\n                selectedTrains={selectedTrains}\n                startDate={startDate}\n                endDate={endDate}\n                departure={departure}\n                destination={destination}\n            />\n        </div>\n    );\n};\n\nexport default ListContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}